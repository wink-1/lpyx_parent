<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wink.lpyx.manager.mapper.product.CategoryBrandMapper">

    <resultMap id="BaseResultMap" type="com.wink.lpyx.model.entity.product.CategoryBrand">
        <result column="brand_id" property="brandId"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <result column="brand_name" property="brandName"/>
        <result column="logo" property="logo"/>
    </resultMap>

    <sql id="columns">
        id,brand_id,category_id,category_name,brand_name,logo,create_time
    </sql>

    <insert id="save">
        insert into category_brand (id,
                                    brand_id,
                                    category_id,
                                    create_time,
                                    update_time,
                                    is_deleted)
        values (#{id},
                #{brandId},
                #{categoryId},
                now(),
                now(),
                0)
    </insert>


    <update id="updateById">
        update category_brand set
        <if test="brandId != null and brandId != ''">
            brand_id = #{brandId},
        </if>
        <if test="categoryId != null and categoryId != ''">
            category_id = #{categoryId},
        </if>
        update_time = now()
        where
        id = #{id}
    </update>


    <delete id="deleteById">
        update category_brand
        set update_time = now(),
            is_deleted  = 1
        where id = #{id}
    </delete>


    <select id="findByPage" resultMap="BaseResultMap">
        select cb.id as id, b.id as brand_id,c.id as category_id,c.name as category_name,b.name as
        brand_name,b.logo,cb.create_time as createTime
        from category_brand as cb
        left join brand as b on cb.brand_id = b.id
        left join category as c on cb.category_id = c.id
        <where>
            <if test="categoryId != null and categoryId != ''">
                and c.id = #{categoryId}
            </if>
            <if test="brandId != null and brandId != ''">
                and b.id = #{brandId}
            </if>
            and cb.is_deleted = 0
        </where>
        order by cb.id

    </select>
    <select id="findBrandByCategoryId" resultType="com.wink.lpyx.model.entity.product.Brand">
        select b.*
        from category_brand as cb
                 left join brand as b on cb.brand_id = b.id
        where cb.is_deleted = 0
          and cb.category_id = #{categoryId}
    </select>


</mapper>