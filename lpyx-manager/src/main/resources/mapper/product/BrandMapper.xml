<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wink.lpyx.manager.mapper.product.BrandMapper">

    <resultMap id="BaseResultMap" type="com.wink.lpyx.model.entity.product.Brand">
        <result column="name" property="name"/>
        <result column="logo" property="logo"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <sql id="columns">
        id,name,logo,create_time,update_time,is_deleted
    </sql>

    <insert id="save">
        insert into brand (name, logo, create_time, update_time, is_deleted)
        values (#{name}, #{logo}, now(), now(), 0)
    </insert>

    <update id="update">
        update brand
        set
        <if test="name != null and name !=''">name = #{name},</if>
        <if test="logo != null and logo !=''">logo = #{logo},</if>
        update_time = now()
        where id = #{id}
    </update>


    <delete id="deleteById">
        update brand
        set is_deleted = 1
        where id = #{id}
    </delete>


    <select id="findByPage" resultMap="BaseResultMap">
        select
        <include refid="columns"/>
        from brand
        where is_deleted = 0
    </select>

    <select id="findByName" resultMap="BaseResultMap">
        select
        <include refid="columns"/>
        from brand
        where name = #{name} and is_deleted = 0
    </select>


    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="columns"/>
        from brand
        where is_deleted = 0
        order by id
    </select>

</mapper>